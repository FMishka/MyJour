@model ICollection<AcademicPerformance>
@using (Html.BeginForm())
{
    <div class="container-fluid">
        <div class="row">

            <div class="col" style="margin-bottom: 5px; width: 10%">
                <h5>Выберите класс:</h5>
                @Html.DropDownList("classId", ViewBag.ClassId as SelectList, new {@class="form-select"})
            </div>

            <div class="col" style="margin-bottom: 5px; width: 10%">
                <h5>Выберите школьный предмет:</h5>
                @Html.DropDownList("subjectId", ViewBag.SubjectId as SelectList, new {@class="form-select"})
            </div>
            <div class="col" style="margin-bottom: 5px; width: 10%">
                <h5>Выберите четверть:</h5>
                @Html.DropDownList("quarter", new SelectList(new string[] {"1","2", "3","4"}), new {@class="form-select"})
            </div>
        </div>
        <div class="row">
            <div class="col-11">
                <input style="margin-bottom: 5px" type="submit" value="Подтвердить" class="btn btn-success" />
            </div>
        </div>
        <div class="row">
            <div class="row">
                @if (Model == null)
                {
                    <a>Результатов не найдено!</a>
                }
                else
                {
                    <table>
                        <tr>
                            <th width="400" style="text-align:center;">Ученик</th>
                            <th width="400" style="text-align:center;">Средняя оценка</th>
                        </tr>
                        @{
                            var studentGetsGrades = Model.Select(s => s.Student).OrderBy(s => s.Name).Distinct(); ;
                            foreach (var students in studentGetsGrades)
                            {
                                <tr style="">
                                    <td width="200" style="border-bottom: 1px solid black; border-right: 1px solid black">@students.Name</td>
                                    @{
                                        double sum = Model.Select(d => new { d.Student, d.Grade }).Where(s => s.Student.Name == students.Name).Sum(s => s.Grade);
                                        double count = Model.Select(d => new { d.Student, d.Grade }).Where(s => s.Student.Name == students.Name).Count();
                                        double avg = sum / count;
                                    }
                                    <td style="border-bottom: 1px solid black">@Math.Round(avg,2)</td>
                                </tr>
                            }
                        }
                    </table>
                }
            </div>
        </div>
    </div>
}
